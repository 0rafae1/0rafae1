name: Generate GitHub Stats

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  generate-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_1 }}

      - name: Create assets directory
        run: mkdir -p assets

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq bc curl

      - name: Fetch GitHub Data
        run: |
          # Busca dados do usu√°rio
          curl -s -H "Authorization: token ${{ secrets.PAT_1 }}" \
            "https://api.github.com/users/0rafae1" > user_data.json
          
          # Busca reposit√≥rios do usu√°rio
          curl -s -H "Authorization: token ${{ secrets.PAT_1 }}" \
            "https://api.github.com/users/0rafae1/repos?per_page=100" > repos_data.json
          
          # Busca eventos de contribui√ß√£o
          curl -s -H "Authorization: token ${{ secrets.PAT_1 }}" \
            "https://api.github.com/users/0rafae1/events?per_page=100" > events_data.json
          
          # Processa dados e cria arquivos tempor√°rios
          jq '[.[].stargazers_count] | add // 0' repos_data.json > total_stars.txt
          jq '[.[] | select(.type == "PushEvent") | .payload.commits | length] | add // 0' events_data.json > total_commits.txt
          jq '[.[] | select(.type == "PullRequestEvent")] | length' events_data.json > total_prs.txt
          jq '[.[] | select(.type == "IssuesEvent")] | length' events_data.json > total_issues.txt
          
          # Linguagens dos reposit√≥rios
          jq '[.[] | .language] | map(select(. != null)) | group_by(.) | map({language: .[0], count: length}) | sort_by(.count) | reverse' repos_data.json > languages_data.json

      - name: Generate Stats SVG
        run: |
          # L√™ dados dos arquivos
          TOTAL_STARS=$(cat total_stars.txt)
          TOTAL_COMMITS=$(cat total_commits.txt)
          TOTAL_PRS=$(cat total_prs.txt)
          TOTAL_ISSUES=$(cat total_issues.txt)
          
          # Cria SVG com dados reais
          cat > assets/github-stats.svg << EOF
          <svg xmlns="http://www.w3.org/2000/svg" width="500" height="280">
            <style>
              .background { fill: #0d1117; }
              .title { fill: #f0f6fc; font-family: Arial; font-size: 20px; font-weight: bold; }
              .stat-label { fill: #8b949e; font-family: Arial; font-size: 14px; }
              .stat-value { fill: #58a6ff; font-family: Arial; font-size: 14px; font-weight: bold; }
              .footer { fill: #484f58; font-family: Arial; font-size: 12px; }
            </style>
            <rect width="500" height="280" class="background"/>
            
            <text x="20" y="40" class="title">GitHub Stats for 0rafae1</text>
            
            <g transform="translate(20, 70)">
              <text class="stat-label">‚≠ê Total Stars Earned:</text>
              <text x="180" class="stat-value">$TOTAL_STARS</text>
              
              <text y="30" class="stat-label">üìù Total Commits:</text>
              <text x="180" y="30" class="stat-value">$TOTAL_COMMITS</text>
              
              <text y="60" class="stat-label">üîÄ Total PRs:</text>
              <text x="180" y="60" class="stat-value">$TOTAL_PRS</text>
              
              <text y="90" class="stat-label">üêõ Total Issues:</text>
              <text x="180" y="90" class="stat-value">$TOTAL_ISSUES</text>
              
              <text y="120" class="stat-label">üöÄ Contributed to:</text>
              <text x="180" y="120" class="stat-value">0</text>
            </g>
            
            <text x="20" y="260" class="footer">Updated: <tspan id="currentDate"></tspan> ‚Ä¢ Generated via GitHub Actions</text>
            
            <script>
              document.getElementById('currentDate').textContent = new Date().toLocaleDateString();
            </script>
          </svg>
          EOF

      - name: Generate Languages SVG
        run: |
          # Cores para linguagens
          declare -A lang_colors=(
            ["JavaScript"]="#f1e05a"
            ["TypeScript"]="#3178c6"
            ["HTML"]="#e34c26"
            ["CSS"]="#563d7c"
            ["Python"]="#3572A5"
            ["Java"]="#b07219"
            ["PHP"]="#4F5D95"
            ["Ruby"]="#701516"
            ["C++"]="#f34b7d"
            ["C"]="#555555"
            ["Shell"]="#89e051"
            ["Dockerfile"]="#384d54"
          )
          
          # Cria SVG base
          cat > assets/github-langs.svg << 'EOF'
          <svg xmlns="http://www.w3.org/2000/svg" width="500" height="300">
            <style>
              .background { fill: #0d1117; }
              .title { fill: #f0f6fc; font-family: Arial; font-size: 20px; font-weight: bold; }
              .lang-name { fill: #f0f6fc; font-family: Arial; font-size: 14px; }
              .lang-percent { fill: #8b949e; font-family: Arial; font-size: 12px; }
              .footer { fill: #484f58; font-family: Arial; font-size: 12px; }
            </style>
            <rect width="500" height="300" class="background"/>
            
            <text x="20" y="40" class="title">Most Used Languages</text>
            
            <g transform="translate(20, 70)">
          EOF
          
          # Adiciona linguagens dinamicamente (m√°ximo 5)
          languages=$(jq -r '.[0:5] | to_entries[] | "\(.key) \(.value.language) \(.value.count)"' languages_data.json)
          total_count=$(jq 'map(.count) | add' languages_data.json)
          
          while read -r index language count; do
            percent=$(echo "scale=2; ($count / $total_count) * 100" | bc)
            width=$(echo "scale=2; $percent * 2" | bc)
            color=${lang_colors[$language]:-"#58a6ff"}
            
            # Adiciona cada linguagem ao SVG
            cat >> assets/github-langs.svg << EOF
              <rect y="$((index * 30))" width="$width" height="15" fill="$color"/>
              <text y="$((index * 30 + 12))" class="lang-name">${language}</text>
              <text x="210" y="$((index * 30 + 12))" class="lang-percent">${percent}%</text>
            EOF
          done <<< "$languages"
          
          cat >> assets/github-langs.svg << 'EOF'
            </g>
            
            <text x="20" y="280" class="footer">Updated: <tspan id="currentDate"></tspan></text>
            
            <script>
              document.getElementById('currentDate').textContent = new Date().toLocaleDateString();
            </script>
          </svg>
          EOF

      - name: Clean up temporary files
        run: |
          rm -f user_data.json repos_data.json events_data.json
          rm -f total_stars.txt total_commits.txt total_prs.txt total_issues.txt
          rm -f languages_data.json

      - name: Commit and Push results
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add assets/
          git diff --staged --quiet || git commit -m "feat: add real GitHub stats with simplified workflow"
          git push